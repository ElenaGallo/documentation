# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017-2020, Open Source Geospatial Foundation, CC-SA
# This file is distributed under the same license as the GeoNode package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GeoNode 3.2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-03 17:10+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../advanced/components/index.rst:2 b054ed3710854df7b75ebb5e85cdb65a
msgid "Overview"
msgstr ""

#: ../../advanced/components/index.rst:4 7598a3084952410ea873bbed09c9b671
msgid "**TODO***"
msgstr ""

#: ../../advanced/components/index.rst:7 8252b3f0821241d5bd3e69134575aa46
msgid "Django"
msgstr ""

#: ../../advanced/components/index.rst:9 ../../advanced/components/index.rst:14
#: ../../advanced/components/index.rst:19
#: ../../advanced/components/index.rst:24
#: ../../advanced/components/index.rst:29
#: ../../advanced/components/index.rst:34 223ef0ba0456480183d1ae18cfc63e93
#: 43f409da46cb4ffabe29e877583efcfa 614072d2154a4bc696d7e3cec5e29fda
#: 9fde275e07b14db8910f0c9759d333aa cadbb3ef7fa645dcad1f962b0073d0e0
#: daa3fffa02624e3fb1e968af5e183bf5
msgid "**TODO**"
msgstr ""

#: ../../advanced/components/index.rst:12 979974f54dd6479ebb563dd46b7136f8
msgid "WebServers"
msgstr ""

#: ../../advanced/components/index.rst:17 5169cf4f977d4e528f52594f8acde97e
msgid "Apache"
msgstr ""

#: ../../advanced/components/index.rst:22 819a8a4bbca44535b81ad52f71e0de77
msgid "NGINX"
msgstr ""

#: ../../advanced/components/index.rst:27 363aa8ce8ee3480d88445062c1dabbf4
msgid "GeoServer"
msgstr ""

#: ../../advanced/components/index.rst:32 adc10b6763ce44e6aa733ad4ce53ab48
msgid "Databases"
msgstr ""

#: ../../advanced/components/index.rst:39 8bcef15c5c3e4f56ad7c0efcb1569a0e
msgid "OAuth2 Security: Authentication and Authorization"
msgstr ""

#: ../../advanced/components/index.rst:40 d2177c673c9b4e958e3376991dec704d
msgid ""
"GeoNode interacts with GeoServer through an advanced security mechanism "
"based on OAuth2 Protocol and GeoFence. This section is a walk through of "
"the configuration and setup of GeoNode and GeoServer Advanced Security."
msgstr ""

#: ../../advanced/components/index.rst:42 0f565387411c4a6494af15738297f6df
msgid "What we will see in this section is:"
msgstr ""

#: ../../advanced/components/index.rst:44 45d0029265c74e5081bf1c6819c442a8
msgid "**Introduction**"
msgstr ""

#: ../../advanced/components/index.rst:46 9a64096de6c84591b40c076588253c6c
msgid "**GeoNode** (Security Backend):"
msgstr ""

#: ../../advanced/components/index.rst:48
#: ../../advanced/components/index.rst:112 d217a2241a454488b8094f6bbb247441
#: da18b976c6d148a393c4699cc014dcad
msgid "DJango Authentication"
msgstr ""

#: ../../advanced/components/index.rst:50
#: ../../advanced/components/index.rst:288 1e352e9fc00944ac8a9a52469d41472f
#: c4c764d8215d4c58a7bf4adc56c18aae
msgid "DJango OAuth Toolkit Setup and Configuration"
msgstr ""

#: ../../advanced/components/index.rst:52 3527014b266f424595ce069414ab9427
msgid "Details on ``settings.py`` Security Settings"
msgstr ""

#: ../../advanced/components/index.rst:54 76f14643b0294bbd957c342b122842c8
msgid "**GeoServer** (Security Backend):"
msgstr ""

#: ../../advanced/components/index.rst:56
#: ../../advanced/components/index.rst:479 27e03703f74f458e824786090ac3f41f
#: 27ef63904efd427395372e655c1a119f
msgid "GeoServer Security Subsystem"
msgstr ""

#: ../../advanced/components/index.rst:58 1594963c199546a0a5949a060fed7dc5
msgid "Introduction to the GeoServer OAuth2 Security Plugin"
msgstr ""

#: ../../advanced/components/index.rst:60 4a87cd4f4e3946aba5474e0ee67fe55a
msgid "Configuration of the ``GeoNode REST Role Service``"
msgstr ""

#: ../../advanced/components/index.rst:62 2bb0fa3d0682485d8068904c2fac6d8a
msgid "Configuration of the ``GeoNode OAuth2 Authentication Filter``"
msgstr ""

#: ../../advanced/components/index.rst:64 be9334c0eb8e468f80b080ec84ea4b3d
msgid "The GeoServer Authentication Filter Chains"
msgstr ""

#: ../../advanced/components/index.rst:66 07195d99dd664132ae6584927fd60666
msgid ""
"Introduction to GeoFence Plugin, the Advanced Security Framework for "
"GeoServer"
msgstr ""

#: ../../advanced/components/index.rst:68 0ac9e18b0c5e470cb7c14957a90c55f5
msgid "**Troubleshooting and Advanced Features**:"
msgstr ""

#: ../../advanced/components/index.rst:70
#: ../../advanced/components/index.rst:827 223b7d5bb77b4b19b8bbda894715c316
#: 26fd548049a54620bda48b6d69981b7c
msgid "Common Issues and Fixes"
msgstr ""

#: ../../advanced/components/index.rst:72
#: ../../advanced/components/index.rst:887 456a1cbfc1bc448282c59a9b07463fa1
#: d7d43d9fab0a4d19947ed72182cd25d1
msgid "How to setup ``HTTPS`` secured endpoints"
msgstr ""

#: ../../advanced/components/index.rst:74
#: ../../advanced/components/index.rst:1017 b1792fa1d5de4946a0742fdff80d00f9
#: b52e34ff70764bb596026b636a73d851
msgid "GeoFence Advanced Features"
msgstr ""

#: ../../advanced/components/index.rst:77 c1d04e1c1d1c4b53b1df0fca986687a1
msgid "Introduction"
msgstr ""

#: ../../advanced/components/index.rst:79 7e744057cad641fb9960925ee9c48ecc
msgid ""
"GeoServer, i.e. the geospatial backend server of GeoNode, is a spatial "
"server which needs authenticated users in order to access protected "
"resources or administration functions."
msgstr ""

#: ../../advanced/components/index.rst:81 715e4625f4cf4471ac7f60267d9d3233
msgid ""
"GeoServer supports several kind of Authentication and Authorization "
"mechanisms. Those systems are pluggable and GeoServer can use them at the"
" same time by the use of a ``Filter Chain``. Briefly this mechanism "
"allows GeoServer to check for different A&A protocols one by one. The "
"first one matching is used by GeoServer to authorize the users."
msgstr ""

#: ../../advanced/components/index.rst:84 6eac8fe7450c4479b95316c37c8092e6
msgid ""
"GeoNode Authentication is based by default on Django Security Subsystem. "
"Django authentication allows GeoNode to manage its internal users, "
"groups, roles and sessions."
msgstr ""

#: ../../advanced/components/index.rst:86 53c8578dd2634b458bdd371628cadf3c
msgid ""
"GeoNode has some external components, like GeoServer or QGis Server, "
"which are pluggable and stand-alone services, devoted to the management "
"of geospatial data. Those external services have their own authentication"
" and authorization mechanisms which must be synchronized somehow with the"
" GeoNode one. Also, those external services maintain, in most of the "
"cases and unless specific configuration does not disable this, "
"alternative security access which for instance allow GeoNode to modify "
"the geospatial catalog under the hood, or a system administrator to have "
"independent and privileged access to the servers."
msgstr ""

#: ../../advanced/components/index.rst:91 1377ec39c3b44cf3a3805926001c6132
msgid ""
"Before going deeply on how GeoServer/GeoNode A&A works and how it can be "
"configured in order to work correctly with GeoNode, let's quickly clarify"
" the difference between the ``Authentication`` and ``Authorization`` "
"concepts."
msgstr ""

#: ../../advanced/components/index.rst:94 c68893ab1fa14bf7a795b7287827a61e
msgid "Authentication"
msgstr ""

#: ../../advanced/components/index.rst:96 c716531c04cd4ad29aa5c0c3e9592900
msgid ""
"Authentication is the process of verifying the identity of someone "
"through the use of some sort of credentials and a handshake protocol. If "
"the credentials are valid, the authorization process starts. "
"Authentication process always proceeds to Authorization process (although"
" they may often seem to be combined). The two terms are often used "
"synonymously but they are two different processes."
msgstr ""

#: ../../advanced/components/index.rst:100 0459260a1e724c48a5091bb0ab360631
msgid ""
"For more details and explanation about the authentication concepts, take "
"a look `here "
"<http://searchsecurity.techtarget.com/definition/authentication>`_."
msgstr ""

#: ../../advanced/components/index.rst:103 752bb60fac5043eb8011e4cbef680b9d
msgid "Authorization"
msgstr ""

#: ../../advanced/components/index.rst:105 c927dc2d9d1e47b385c10035fd4629cb
msgid ""
"Authorization is the process of allowing authenticated users to access "
"protected resources by checking its roles and rights against some sort of"
" security rules mechanism or protocol. In other words it allows to "
"control access rights by granting or denying specific permissions to "
"specific authorized users."
msgstr ""

#: ../../advanced/components/index.rst:109 7a8c89bf2a7a41b48d39eaecaf401c80
msgid "GeoNode Security Backend"
msgstr ""

#: ../../advanced/components/index.rst:114 0ca75cc3d7aa47b09d2477fb0e66759d
msgid ""
"The Django authentication system handles both authentication and "
"authorization."
msgstr ""

#: ../../advanced/components/index.rst:116 62ad4edfa9c341f9ab7620c7da04abaa
msgid "The auth system consists of:"
msgstr ""

#: ../../advanced/components/index.rst:118 22661d0071b3456fa18176bd13bba3ac
msgid "Users"
msgstr ""

#: ../../advanced/components/index.rst:119 41d4819fb0de4a8bbc23d2da4a4723d6
msgid ""
"Permissions: Binary (yes/no) flags designating whether a user may perform"
" a certain task."
msgstr ""

#: ../../advanced/components/index.rst:120 87196503c3af4ae6a6bde5eb90366bb2
msgid ""
"Groups: A generic way of applying labels and permissions to more than one"
" user."
msgstr ""

#: ../../advanced/components/index.rst:121 d4f3b2661a8f4451a2b6320beca368de
msgid "A configurable password hashing system"
msgstr ""

#: ../../advanced/components/index.rst:122 30292e4912db47289a72a0edf5bf8be5
msgid "Forms and view tools for logging in users, or restricting content"
msgstr ""

#: ../../advanced/components/index.rst:123 246c4107e9a043efbc44a314f828ceab
msgid "A pluggable backend system"
msgstr ""

#: ../../advanced/components/index.rst:125 2f0c3419d53c48169fa8685282032e34
msgid ""
"The authentication system in Django aims to be very generic and doesn’t "
"provide some features commonly found in web authentication systems. "
"Solutions for some of these common problems have been implemented in "
"third-party packages:"
msgstr ""

#: ../../advanced/components/index.rst:127 485643ee07634f5e9f3396fccacf69fa
msgid "Password strength checking"
msgstr ""

#: ../../advanced/components/index.rst:128 3df99581cb87411386c00cf70c6f5898
msgid "Throttling of login attempts"
msgstr ""

#: ../../advanced/components/index.rst:129 d57acf183c174cecae5561c3ca70ebc2
msgid "Authentication against third-parties (OAuth, for example)"
msgstr ""

#: ../../advanced/components/index.rst:131 3668c462b84f4d4c892994df337fcd00
msgid ""
"For more details on installation and configuration of Django "
"authentication system, please refer to the official guide "
"https://docs.djangoproject.com/en/3.2/topics/auth/."
msgstr ""

#: ../../advanced/components/index.rst:133 378e91208ddb491fb3f346d4d3e1157b
msgid ""
"GeoNode communicates with GeoServer through Basic Authentication under "
"the hood, in order to configure the data and the GeoServer catalog."
msgstr ""

#: ../../advanced/components/index.rst:135 5e938b1ab16f4a64b0287114da3979e6
msgid ""
"In order to do this, you must be sure that GeoNode knows the **internal**"
" admin user and password of GeoServer."
msgstr ""

#: ../../advanced/components/index.rst:137 732aa8a755bb46d6b4e718c3ee56a859
msgid ""
"This must be an internal GeoServer user with admin rights, not a GeoNode "
"one."
msgstr ""

#: ../../advanced/components/index.rst:139 0d41e5acb2514f6c9af35124b1ea8ed3
msgid ""
"Make sure the credentials are correctly configured into the file "
"``settings.py``"
msgstr ""

#: ../../advanced/components/index.rst:142 a864fdf2db3349dbbd7a2a7ac0d09509
msgid "OGC_SERVER"
msgstr ""

#: ../../advanced/components/index.rst:144 25825140efdd43a3acbff6932cac0f78
msgid "Ensure that the ``OGC_SERVER`` settings are correctly configured."
msgstr ""

#: ../../advanced/components/index.rst:146 740ae28863bb4cd9827d60535982ef1e
msgid ""
"Notice that the two properties ``LOGIN_ENDPOINT`` and ``LOGOUT_ENDPOINT``"
" must specify the GeoServer OAuth2 Endpoints (see details below). The "
"default values ``'j_spring_oauth2_geonode_login'`` and "
"``'j_spring_oauth2_geonode_logout'`` work in most of the cases, unless "
"you need some specific endpoints different from the later. In any case "
"those values **must** be coherent with the GeoServer OAuth2 Plugin "
"configuration."
msgstr ""

#: ../../advanced/components/index.rst:150 c03913ebec0642969ae6c777bf5de2b6
msgid "If in doubt, please use the default values here below."
msgstr ""

#: ../../advanced/components/index.rst:152
#: ../../advanced/components/index.rst:306
#: ../../advanced/components/index.rst:319
#: ../../advanced/components/index.rst:341
#: ../../advanced/components/index.rst:372 0d9e0f18abe1435bbaa55e0b8dbafcf8
#: 34508d02f3ad4dcc9e8ed2a076f5a981 6ac6eed0543f4f399057d872b7b18317
#: a6b8ceecbc424fe8b9bdfb639f69c4a5 bf9f70a413c642ada670b73e1b9cb71d
msgid "Default values are:"
msgstr ""

#: ../../advanced/components/index.rst:186 95e419a962154091b3554dcc69468505
msgid "GeoNode and GeoServer A&A Interaction"
msgstr ""

#: ../../advanced/components/index.rst:188 484676decfea4070afc187b803c61e9b
msgid ""
"The GeoServer instance used by GeoNode, has a particular setup that "
"allows the two frameworks to correctly interact and exchange informations"
" on users credentials and permissions."
msgstr ""

#: ../../advanced/components/index.rst:190 8cdcb024761a4fb1b3620a8e4300ba2f
msgid ""
"In particular GeoServer is configured with a ``Filter Chain`` for "
"Authorization that makes use of the two following protocols:"
msgstr ""

#: ../../advanced/components/index.rst:196 4f1f896177f943b2819d96c488b99487
msgid ""
"**Basic Authentication**; this is the default GeoServer Authentication "
"mechanism. This makes use of `rfc2617 - Basic and Digest Access "
"Authentication <https://tools.ietf.org/html/rfc2617>`_ in order to check "
"for user's credentials."
msgstr ""

#: ../../advanced/components/index.rst:193 107c2da40ef54197a20383c6460ec376
msgid ""
"In other words, GeoServer takes a ``username`` and a ``password`` encoded"
" `Base64 <https://tools.ietf.org/html/rfc4648>`_ on the HTTP Request "
"Headers and compare them against its internal database (which by default "
"is an encrypted XML file on the GeoServer Data Dir). If the user's "
"credentials match, then GeoServer checks for Authorization through its "
"``Role Services`` (we will see those services in details on the "
"*GeoServer (Security Backend)* section below)."
msgstr ""

#: ../../advanced/components/index.rst:196 4ec2d5bcde3847c6bbeac3b05a86a0f0
msgid ""
"GeoServer ships by default with ``admin`` and ``geoserver`` as the "
"default administrator user name and password. Before putting the "
"GeoServer on-line it is imperative to change at least the administrator "
"password."
msgstr ""

#: ../../advanced/components/index.rst:198 f92e31085de44032b7938201552d5906
msgid ""
"**OAuth2 Authentication**; this module allows GeoServer to authenticate "
"against the `OAuth2 Protocol <https://tools.ietf.org/html/rfc6749>`_. If "
"the Basic Authentication fails, GeoServer falls back to this by using "
"GeoNode as OAuth2 Provider by default."
msgstr ""

#: ../../advanced/components/index.rst:200 6264549c1ceb4ffab4d289ff10eefb68
msgid ""
"Further details can be found directly on the official GeoServer "
"documentation at section \"`Authentication Chain "
"<http://docs.geoserver.org/latest/en/user/security/auth/chain.html"
"#security-auth-chain>`_\""
msgstr ""

#: ../../advanced/components/index.rst:202 0fd39700ed89460a8cb62dc576956746
msgid ""
"From the **GeoNode backend (server) side**, the server will make use of "
"**Basic Authentication** with administrator credentials to configure the "
"GeoServer catalog. GeoServer must be reachable by GeoNode of course, and "
"GeoNode must know the internal GeoServer admin credentials."
msgstr ""

#: ../../advanced/components/index.rst:204 40ad97f42a8647a59650113766b48488
msgid ""
"From the **GeoNode frontend (browser and GUI) side**, the "
"*Authentication* goal is to allow GeoServer to recognize as valid a user "
"which has been already logged into GeoNode, providing kind of an `SSO "
"<https://en.wikipedia.org/wiki/Single_sign-on>`_ mechanism between the "
"two applications."
msgstr ""

#: ../../advanced/components/index.rst:206 4e8a1f0476804f08a96a9b658b981267
msgid ""
"GeoServer must know and must be able to access GeoNode via HTTP/HTTPS. In"
" other words, an external user connected to GeoNode must be authenticated"
" to GeoServer with same permissions. This is possible through the "
"**OAuth2 Authentication** Protocol."
msgstr ""

#: ../../advanced/components/index.rst:208 f2650bd2116c406cb48d9adf24688f55
msgid "**GeoNode / GeoServer Authentication Mechanism**"
msgstr ""

#: ../../advanced/components/index.rst:210 f5c9799802514fdbbce33ae80c32344e
msgid "*GeoNode as OAuth2 Provider (OP)*"
msgstr ""

#: ../../advanced/components/index.rst:212 ffc0918b8a77445594a032ca8864a896
msgid ""
"OpenID Connect is an identity framework built on OAuth 2.0 protocol which"
" extends the authorization of OAuth 2.0 processes to implement its "
"authentication mechanism. OpenID Connect adds a discovery mechanism "
"allowing users to use an external trusted authority as an identity "
"provider. From another point of view, this can be seen as a single sign "
"on (SSO) system."
msgstr ""

#: ../../advanced/components/index.rst:214 4cd548d0d2f94664a6a4c46d3df5bb26
msgid ""
"OAuth 2.0 is an authorization framework which is capable of providing a "
"way for clients to access a resource with restricted access on behalf of "
"the resource owner. OpenID Connect allows clients to verify the users "
"with an authorization server based authentication."
msgstr ""

#: ../../advanced/components/index.rst:216 71a271c95a8d43049a95afae891d51bd
msgid ""
"As an OP, GeoNode will be able to act as trusted identity provider, thus "
"allowing the system working on an isolated environment and/or allow "
"GeoNode to authenticate private users managed by the local DJango auth "
"subsystem."
msgstr ""

#: ../../advanced/components/index.rst:218 3393835de413407a845ef789ce3a1ef6
msgid "*GeoServer as OAuth2 Relying Party (RP)*"
msgstr ""

#: ../../advanced/components/index.rst:220 77657a4b5f004377a90e77042cc39b78
msgid ""
"Thanks to the **OAuth2 Authentication** GeoServer is able to retrieve an "
"end user's identity directly from the OAuth2 Provider (OP)."
msgstr ""

#: ../../advanced/components/index.rst:222 3664a87152c7451d80d24f0b78cf5248
msgid ""
"With GeoNode acting as an OP, the mechanism will avoid the use of cookies"
" relying, instead, on the OAuth2 secure protocol."
msgstr ""

#: ../../advanced/components/index.rst:224 6fcd44f0f5a44460bb0373074bbf60a6
msgid "How the OAuth2 Protocol works:"
msgstr ""

#: ../../advanced/components/index.rst:228 8ae6941928034070ad282c4162a70279
msgid ""
"The relying party sends the request to the OAuth2 provider to "
"authenticate the end user"
msgstr ""

#: ../../advanced/components/index.rst:230 b51896b4cabb4941a0de5422df711daf
msgid "The OAuth2 provider authenticates the user"
msgstr ""

#: ../../advanced/components/index.rst:232 7a259c082ec34128a57f79440ef3954d
msgid ""
"The OAuth2 provider sends the ID token and access token to the relying "
"party"
msgstr ""

#: ../../advanced/components/index.rst:234 a4ce628691e84cedb1794e60860f10c3
msgid ""
"The relying party sends a request to the user info endpoint with the "
"access token received from OAuth2 provider"
msgstr ""

#: ../../advanced/components/index.rst:236 4fa0db19adfd4e5586e68fbcb9a730ae
msgid "The user info endpoint returns the claims."
msgstr ""

#: ../../advanced/components/index.rst:238 a83535f54d0e4f4aa8b50f861c5284d1
msgid "**GeoNode / GeoServer Authorization Mechanism**"
msgstr ""

#: ../../advanced/components/index.rst:240 4cf65850d0e44234993de31e5b795e4d
msgid ""
"Allowing GeoServer to make use of a OAuth2 in order to act as an OAuth2 "
"RP, is not sufficient to map a user identity to its roles though."
msgstr ""

#: ../../advanced/components/index.rst:242 732b1fb37832438a945794e036a73907
msgid ""
"On GeoServer side we will still need to a ``RoleService`` which would be "
"able to talk to GeoNode and transform the tokens into a User Principal to"
" be used within the GeoServer Security subsystem itself."
msgstr ""

#: ../../advanced/components/index.rst:244 855cc1e94da8467ea50c9f7fae654b46
msgid ""
"In other words after a successfull Authentication, GeoServer needs to "
"Authorize the user in order to understand which resources he is enable to"
" access or not. A ``REST based RoleService`` on GeoNode side, allows "
"GeoServer to talk to GeoNode via `REST "
"<https://en.wikipedia.org/wiki/Representational_state_transfer>`_ to get "
"the current user along with the list of its Roles."
msgstr ""

#: ../../advanced/components/index.rst:247 de66a12070d5415f8185e82aec8c9a6f
msgid ""
"Nevertheless knowing the Roles associated to a user is not sufficient. "
"The complete GeoServer Authorization needs to catch a set of ``Access "
"Rules``, associated to the Roles, in order to establish which resources "
"and data are accessible by the user."
msgstr ""

#: ../../advanced/components/index.rst:249 2c319402b3c045e486e844327aaa05db
msgid ""
"The GeoServer Authorization is based on Roles only, therefore for each "
"authenticated user we need also to know:"
msgstr ""

#: ../../advanced/components/index.rst:251 33d79691595a43388d162841cf2c0221
msgid "The Roles associated to a valid user session"
msgstr ""

#: ../../advanced/components/index.rst:253 e91ab3c4967b43df83dabc21f9dea5f4
msgid "The access permissions associated to a GeoServer Resource"
msgstr ""

#: ../../advanced/components/index.rst:255 d0382a74b3f34489b2e0d94a2d87aa27
msgid ""
"The Authentication mechanism above allows GeoServer to get information "
"about the user and his Roles, which addresses point 1."
msgstr ""

#: ../../advanced/components/index.rst:257 53e53bfd822848f1bced668e812bbd45
msgid ""
"About point 2, GeoServer makes use of the `GeoFence Embedded Server "
"<http://docs.geoserver.org/latest/en/user/community/geofence-"
"server/index.html>`_ plugin. GeoFence is a java web application that "
"provides an advanced authentication / authorization engine for GeoServer "
"using the interface described in `here "
"<https://github.com/geoserver/geofence/wiki/First-steps>`_. GeoFence has "
"its own rules database for the management of Authorization rules, and "
"overrides the standard GeoServer security management system by "
"implementing a sophisticated Resource Access Manager. Least but not last,"
" GeoFence implements and exposes a `REST API "
"<https://github.com/geoserver/geofence/wiki/REST-API>`_ allowing remote "
"authorized clients to read / write / modify security rules."
msgstr ""

#: ../../advanced/components/index.rst:262 a185eab1857d4272bcfb738a57522184
msgid "The advantages using such plugin are multiple:"
msgstr ""

#: ../../advanced/components/index.rst:264 75bfb501541e4439b01759ac69672c60
msgid ""
"The Authorizations rules have a fine granularity. The security rules are "
"handled by GeoFence in a way similar to the iptables ones, and allow to "
"define security constraints even on sub-regions and attributes of layers."
msgstr ""

#: ../../advanced/components/index.rst:266 670af77a7daa4c75a3fcd0b074c31dab
msgid ""
"GeoFence exposes a REST interface to its internal rule database, allowing"
" external managers to update the security constraints programmatically"
msgstr ""

#: ../../advanced/components/index.rst:268 2e26240b7dba49b8a13ef877e4184ad4
msgid ""
"GeoFence implements an internal caching mechanism which improves "
"considerably the performances under load."
msgstr ""

#: ../../advanced/components/index.rst:270 060048b52a0541bcb3d0f1dfdc0dfe59
msgid "*GeoNode interaction with GeoFence*"
msgstr ""

#: ../../advanced/components/index.rst:272 dee4697c6bdf4691844e3b1fda659f94
msgid ""
"GeoNode itself is able to push/manage Authorization rules to GeoServer "
"through the GeoFence `REST API "
"<https://github.com/geoserver/geofence/wiki/REST-API>`_, acting as an "
"administrator for GeoServer. GeoNode properly configures the GeoFence "
"rules anytime it is needed, i.e. the permissions of a Resource / Layer "
"are updated."
msgstr ""

#: ../../advanced/components/index.rst:275 c0fc26d1736d4a88852283878bfb712a
msgid ""
"GeoServer must know and must be able to access GeoNode via HTTP/HTTPS. In"
" other words, an external user connected to GeoNode must be authenticated"
" to GeoServer with same permissions. This is possible through the "
"**GeoNodeCoockieProcessingFiler**."
msgstr ""

#: ../../advanced/components/index.rst:277 a9a62d6a75c24db2bd254d4b704f86f1
msgid "Summarizing we will have different ways to access GeoNode Layers:"
msgstr ""

#: ../../advanced/components/index.rst:279 d0949eafc3cb491bbafa818fb22204bd
msgid ""
"Through GeoNode via DJango Authentication and "
"**GeoNodeCoockieProcessingFiler**; basically the users available in "
"GeoNode are also valid for GeoServer or any other backend."
msgstr ""

#: ../../advanced/components/index.rst:281 7d15838ac1584f729bf8e9b6561826ae
msgid ""
"If a GeoNode user has \"administrator\" rights, he will be able to "
"administer GeoServer too."
msgstr ""

#: ../../advanced/components/index.rst:283 f9f285fff4294be29afe66b379a5ca71
msgid ""
"Through GeoServer Security Subsystem; it will be always possible to "
"access to GeoServer using its internal security system and users, unless "
"explictly disabled (**warning** this is dangerous, you must know what you"
" are doing)."
msgstr ""

#: ../../advanced/components/index.rst:285 4313e59f34034f6cb3e1cb3799b8cbb0
msgid ""
"Let's now see in details how the single pieces are configured and how "
"they can be configured."
msgstr ""

#: ../../advanced/components/index.rst:290 5af695fb0a9e4a65918e83d06b5c20b9
msgid ""
"As stated above, GeoNode makes use of the OAuth2 protocol for all the "
"frontend interactions with GeoServer. GeoNode must be configured as an "
"OAuth2 Provider and provide a ``Client ID`` and a ``Client Sercret`` key "
"to GeoServer. This is possible by enabling and configuring the `Django "
"OAuth Toolkit Plugin <https://django-oauth-"
"toolkit.readthedocs.io/en/latest/>`_."
msgstr ""

#: ../../advanced/components/index.rst:293 d54ba89c66104349afbc3a5dedc2462b
msgid ""
"GeoNode and GeoServer won't work at all if the following steps are not "
"executed at the first installation."
msgstr ""

#: ../../advanced/components/index.rst:296 c352ae62929f415ab2334af2293b2115
msgid "Default ``settings.py`` Security Settings for OAuth2"
msgstr ""

#: ../../advanced/components/index.rst:298 673282f2f53143dcb5764538a5f13af7
msgid ""
"Double check that the OAuth2 Provider and Security Plugin is enabled and "
"that the settings below are correctly configured."
msgstr ""

#: ../../advanced/components/index.rst:301 cc8251dcdbdb404fb486ac4451dd6659
msgid "AUTH_IP_WHITELIST"
msgstr ""

#: ../../advanced/components/index.rst:303 23c51a269e9e41e7bcc20adf115e4876
msgid ""
"``AUTH_IP_WHITELIST`` property limits access to users/groups REST Role "
"Service endpoints to the only whitelisted IP addresses. Empty list means "
"'allow all'. If you need to limit 'api' REST calls to only some specific "
"IPs fill the list like this: ``AUTH_IP_WHITELIST = ['192.168.1.158', "
"'192.168.1.159']``"
msgstr ""

#: ../../advanced/components/index.rst:315 fa2370125ef94210b4f1a602d8c5c2fe
msgid "INSTALLED_APPS"
msgstr ""

#: ../../advanced/components/index.rst:317 7a31a9cfccbe4c8f8cc12f23867e20dc
msgid ""
"In order to allow GeoNode to act as an OAuth2 Provider, we need to enable"
" the ``oauth2_provider`` DJango application provided by the \"Django "
"OAuth Toolkit\"."
msgstr ""

#: ../../advanced/components/index.rst:337 40af865fa5c442a08d1a0f20d234902a
msgid "MIDDLEWARE_CLASSES"
msgstr ""

#: ../../advanced/components/index.rst:339 38d5119595b84d2b87ea48ba8cce0000
msgid ""
"Installing the `oauth2_provider`` DJango application is not sufficient to"
" enable the full functionality. We need also GeoNode to include "
"additional entities to its internal model."
msgstr ""

#: ../../advanced/components/index.rst:367 4a83eef339ff4b9cbb413aade3dac1b6
msgid "AUTHENTICATION_BACKENDS"
msgstr ""

#: ../../advanced/components/index.rst:369 2eb0e5fa615148a09af8eeb91de46341
msgid ""
"In order to allow GeoNode to act as an OAuth2 Provider, we need to enable"
" the ``oauth2_provider.backends.OAuth2Backend`` DJango backend provided "
"by the \"Django OAuth Toolkit\". Also notice that we need to specify the "
"OAuth2 Provider scopes and declare which ``generator`` to use in order to"
" create ``OAuth2 Client IDs``."
msgstr ""

#: ../../advanced/components/index.rst:397 09660916e91440c6915168ac8d06925d
msgid "Django OAuth Toolkit Admin Setup"
msgstr ""

#: ../../advanced/components/index.rst:399 7e08a2b6eebf4e30b8909762280b385a
msgid ""
"Once the ``settings.py`` and ``local_settings.py`` have been correctly "
"configured for your system:"
msgstr ""

#: ../../advanced/components/index.rst:401 6d31893895714114af6049a3f023e78e
msgid "Complete the GeoNode setup steps"
msgstr ""

#: ../../advanced/components/index.rst:403 e5fb096dcfa74c44b4b3996f7fe99b5d
msgid "Prepare the model"
msgstr ""

#: ../../advanced/components/index.rst:411 be0086832e014e86a3047f7182ce04e0
msgid "Prepare the static data"
msgstr ""

#: ../../advanced/components/index.rst:417 89428a95331146b5b060b2fb15df8c9d
msgid "Make sure the database has been populated with initial default data"
msgstr ""

#: ../../advanced/components/index.rst:419
#: ../../advanced/components/index.rst:427 0428e533e6e549ae94e534f1b0b89a64
#: 6978d34ed26d40938dedf785821b8abb
msgid ""
"*Deprecated* this command will be replaced by migrations in the future, "
"so be careful."
msgstr ""

#: ../../advanced/components/index.rst:425 adf1842b6008414f92fa5f63cbe245ae
msgid "Make sure there exists a superuser for your environment"
msgstr ""

#: ../../advanced/components/index.rst:433 439a17624b9e4ce79e6e8dc99628c647
msgid ""
"Read the base tutorials on GeoNode Developer documentation for details on"
" the specific commands and how to use them."
msgstr ""

#: ../../advanced/components/index.rst:435 173bc27edc4a4a1ca8aa84f8d96c7c49
msgid "Start the application"
msgstr ""

#: ../../advanced/components/index.rst:437 72e1764ab4124354a3226ac8eb5143ee
msgid ""
"Start GeoNode accordingly on how the setup has been done; run debug mode "
"through ``paver``, or proxied by an HTTP Server like Apache2 HTTPD, Nginx"
" or others."
msgstr ""

#: ../../advanced/components/index.rst:439 992b789eaa8049e7ba4250a5f36606d2
msgid "Finalize the setup of the OAuth2 Provider"
msgstr ""

#: ../../advanced/components/index.rst:441 16eb22598c5a44a386bd0e1416e7d04e
msgid ""
"First of all you need to configure and create a new OAuth2 Application "
"called ``GeoServer`` through the GeoNode Admin Dashboard"
msgstr ""

#: ../../advanced/components/index.rst:443 e23640f6bbdf420b9b9d60dc10b990ba
msgid "Access the GeoNode Admin Dashboard"
msgstr ""

#: ../../advanced/components/index.rst:447 ed6ba5b6708048beb005b43f132b3f28
msgid "Go to ``Django OAuth Toolkit`` > ``Applications``"
msgstr ""

#: ../../advanced/components/index.rst:451 913e7015854047f9a0b2e21ea54e688e
msgid "Update or create the Application named ``GeoServer``"
msgstr ""

#: ../../advanced/components/index.rst:453 6ac8191002cc4a49b69169bf82f55d18
msgid "The Application name **must** be ``GeoServer``"
msgstr ""

#: ../../advanced/components/index.rst:457 2c710df474e3454b94822a4ed40eb5b4
msgid ""
"``Client id``; An alphanumeric code representing the OAuth2 Client Id. "
"GeoServer OAuth2 Plugin **will** use **this** value."
msgstr ""

#: ../../advanced/components/index.rst:459
#: ../../advanced/components/index.rst:471 b64ef37ee87b43c9b7f21581e9611e00
#: cac69c465efb492f8a81e4c8cc373c83
msgid ""
"In a production environment it is **highly** recommended to modify the "
"default value provided with GeoNode installation."
msgstr ""

#: ../../advanced/components/index.rst:461 0bfd3a228bde435fb4e3c4ea6b985857
msgid ""
"``User``; Search for the ``admin`` user. Its ``ID`` will be automatically"
" updated into the form."
msgstr ""

#: ../../advanced/components/index.rst:463 03a0a11b0f4444bbaf29827cb1724d2a
msgid ""
"``Redirect uris``; It is possible to specify many URIs here. Those must "
"coincide with the GeoServer instances URIs."
msgstr ""

#: ../../advanced/components/index.rst:465 c48185edbf434e1fb30521f632aab62d
msgid "``Client type``; Choose ``Confidential``"
msgstr ""

#: ../../advanced/components/index.rst:467 07ae2b50e18e4c99a0c6b92cb291937c
msgid "``Authorization grant type``; Choose ``Authorization code``"
msgstr ""

#: ../../advanced/components/index.rst:469 71471e9bab1c4ff6aace0fe235b6b7d8
msgid ""
"``Client secret``; An alphanumeric code representing the OAuth2 Client "
"Secret. GeoServer OAuth2 Plugin **will** use **this** value."
msgstr ""

#: ../../advanced/components/index.rst:473 055f4bba541c41c38d1429a8b5c51562
msgid "``Name``; **Must** be ``GeoServer``"
msgstr ""

#: ../../advanced/components/index.rst:476 c51e08fde7d6426d8e61103408f8550b
msgid "GeoServer Security Backend"
msgstr ""

#: ../../advanced/components/index.rst:481 12e9987bc5d6468290120d811c9e9f44
msgid ""
"GeoServer has a robust security subsystem, modeled on Spring Security. "
"Most of the security features are available through the Web "
"administration interface."
msgstr ""

#: ../../advanced/components/index.rst:483 417728ac28cf4d53b237194d535b1f80
msgid ""
"For more details on how this works and how to configure and modify it, "
"please refer to the official GeoServer guide "
"http://docs.geoserver.org/stable/en/user/security/webadmin/index.html"
msgstr ""

#: ../../advanced/components/index.rst:485 bd7e915bf42241ff88b12e982afe983c
msgid ""
"By using the ``GeoServer Data Dir`` provided with GeoNode build, the "
"following configuration are already available. You will need just to "
"update them accordingly to your environment (like IP addresses and Host "
"names, OAuth2 Keys, and similar things). However it is recommended to "
"read carefully all the following passages in order to understand exactly "
"how the different component are configured and easily identify any "
"possible issue during the deployment."
msgstr ""

#: ../../advanced/components/index.rst:488 7e228ad9b6c04e22a2dece8b35e88c43
msgid "The main topics of this section are:"
msgstr ""

#: ../../advanced/components/index.rst:490
#: ../../advanced/components/index.rst:499 52f3f558eb12470a90745b31a25df98f
#: 9baa72380d414dedbbabbdbae7b9dd49
msgid "Connection to the GeoNode REST Role Service"
msgstr ""

#: ../../advanced/components/index.rst:492
#: ../../advanced/components/index.rst:587 643399eabc49411b94be78981f4d5e64
#: 9ac8d4e92f3f490b87f363e2336dd589
msgid "Setup of the GeoServer OAuth2 Authentication Filter"
msgstr ""

#: ../../advanced/components/index.rst:494
#: ../../advanced/components/index.rst:654 952b88e6e8bb470ab11d2c70b2c62c85
#: a7aca2bc55f0443ea3983989c26921a1
msgid "Configuration of the GeoServer Filter Chains"
msgstr ""

#: ../../advanced/components/index.rst:496
#: ../../advanced/components/index.rst:748 3dfed99025404238b80e45736ccef725
#: 7c47cbafa1f54962b480e03590c06b28
msgid "Setup and test of the GeoFence Server and Default Rules"
msgstr ""

#: ../../advanced/components/index.rst:502
#: ../../advanced/components/index.rst:592
#: ../../advanced/components/index.rst:663
#: ../../advanced/components/index.rst:755 37a575f0c21447af860bb9437b8da186
#: 63f45e6260554712ae6cacc3a1a492f5 d49ddb7ffa784536b10d189c5b3561ad
#: dddf8c9210da41a6831e40851959450f
msgid "Preliminary checks"
msgstr ""

#: ../../advanced/components/index.rst:504
#: ../../advanced/components/index.rst:594
#: ../../advanced/components/index.rst:665
#: ../../advanced/components/index.rst:757 1ba66c90ba48428680e60849980ee847
#: 4fcce7ecf7a84474b5b2dc076a9e9892 c7e5a51f2d6240aea9f9eb5e39ddfe1c
#: e6c8e9aeab7440d4a5b9818f22a8c8a6
msgid "GeoServer is up and running and you have admin rights"
msgstr ""

#: ../../advanced/components/index.rst:506
#: ../../advanced/components/index.rst:596
#: ../../advanced/components/index.rst:667 0a6083287a5149208b673871c8ec7852
#: 27addee01a9f493fb6e5263babeba701 d0259d152e5440a9b2184154ce2b6505
msgid "GeoServer must reach the GeoNode instance via HTTP"
msgstr ""

#: ../../advanced/components/index.rst:508 6bbd913b40604022992c284099d62903
msgid ""
"The GeoServer Host IP Address must be allowed to access the GeoNode Role "
"Service APIs (see the section ``AUTH_IP_WHITELIST`` above)"
msgstr ""

#: ../../advanced/components/index.rst:511 77b42c1b2f2143bdb277a101c6388b3a
msgid "Setup of the GeoNode REST Role Service"
msgstr ""

#: ../../advanced/components/index.rst:513 aae3102346f34f3c98ad2e35b272d9e2
msgid "Login as ``admin`` to the GeoServer GUI"
msgstr ""

#: ../../advanced/components/index.rst:515 1b3e15c5908e403aaf56f9e08be6fcc8
msgid ""
"In a production system remember to change the default admin credentials "
"``admin`` \\ ``geoserver``"
msgstr ""

#: ../../advanced/components/index.rst:519 f9bb59cb45eb4b7a8f74b93836b73422
msgid "Access the ``Security`` > ``Users, Groups, Roles`` section"
msgstr ""

#: ../../advanced/components/index.rst:523 a4e7369357214d4b95e9c8c7764c772c
msgid ""
"**If not yet configured** the service ``geonode REST role service``, "
"click on ``Role Services`` > ``Add new``"
msgstr ""

#: ../../advanced/components/index.rst:525 f536728908cf468eb232e2970701c09e
msgid ""
"This passage is **not** needed if the ``geonode REST role service`` has "
"been already created. If so it will be displayed among the Role Services "
"list"
msgstr ""

#: ../../advanced/components/index.rst:531 aab6452dd63148528b26b54d6b37e1dd
msgid ""
"**If not yet configured** the service ``geonode REST role service``, "
"choose ``AuthKEY REST - Role service from REST endpoint``"
msgstr ""

#: ../../advanced/components/index.rst:535 7fbe7ba513fa47f2a5a16a06bcd6a45d
msgid "Create / update the ``geonode REST role service`` accordingly"
msgstr ""

#: ../../advanced/components/index.rst:539 7e765280f35c4eae858b5a4132a8b1b1
msgid "``Name``; **Must** be ``geonode REST role service``"
msgstr ""

#: ../../advanced/components/index.rst:541 2b80872ef7a04327b6a4e6f365b54c9e
msgid ""
"``Base Server URL``; Must point to the GeoNode instance base URL (e.g. "
"``http://<geonode_host_url>``)"
msgstr ""

#: ../../advanced/components/index.rst:543 81a1a080d700489290cc229d45e95035
msgid "``Roles REST Endpoint``; Enter ``/api/roles``"
msgstr ""

#: ../../advanced/components/index.rst:545 39a49ac3f98a45bca2caf5544710e67a
msgid "``Admin Role REST Endpoint``; Enter ``/api/adminRole``"
msgstr ""

#: ../../advanced/components/index.rst:547 f8c3cdafbbac4951a88f2160b621e28e
msgid "``Users REST Endpoint``; Enter ``/api/users``"
msgstr ""

#: ../../advanced/components/index.rst:549 512f843753e948fc82e6b0c4e364096c
msgid "``Roles JSON Path``; Enter ``$.groups``"
msgstr ""

#: ../../advanced/components/index.rst:551 ce939babbe964f2bbe822273a4145c35
msgid "``Admin Role JSON Path``; Enter ``$.adminRole``"
msgstr ""

#: ../../advanced/components/index.rst:553 5148cf6c65024547ba5a0c7787b3b5eb
msgid "``Users JSON Path``; Enter ``$.users[0].groups``"
msgstr ""

#: ../../advanced/components/index.rst:555 cd763ff332b145098ad3d3726a5cf82f
msgid ""
"Once everything has been setup and it is working, choose the "
"``Administrator role`` and ``Group administrator role`` as ``ROLE_ADMIN``"
msgstr ""

#: ../../advanced/components/index.rst:558 54fe0a87c86b496aaba8bfc9e9b46103
msgid "Allow GeoFence to validate rules with ``ROLES``"
msgstr ""

#: ../../advanced/components/index.rst:560 67b34640e66744518f4dd682e908099e
msgid ""
"The following instruction are different accordingly to the GeoServer "
"version you are currently using."
msgstr ""

#: ../../advanced/components/index.rst:563 7b6626db2f1c4014b05c23e6ebfd50a1
msgid "GeoServer 2.9.x and 2.10.x"
msgstr ""

#: ../../advanced/components/index.rst:565 576cadf745c04c86bcd9b34bd19d32cb
msgid "Access the ``Security`` > ``Settings`` section"
msgstr ""

#: ../../advanced/components/index.rst:569 0a571ab3c67146e190b793662c7f112e
msgid "Choose the ``geonode REST role service`` as ``Active role service``"
msgstr ""

#: ../../advanced/components/index.rst:574 19cce291d8b14749abc24411f220c3fb
msgid "GeoServer 2.12.x and above"
msgstr ""

#: ../../advanced/components/index.rst:576 2f55e916d56a44cd855ed34246184cad
msgid ""
"With the latest updates to GeoFence Plugin, the latter no more recognizes"
" the Role Service from the default settings but from the ``geofence-"
"server.properties`` file."
msgstr ""

#: ../../advanced/components/index.rst:578 6f63c106cb7b456585eb998cdcd2c432
msgid ""
"That said, it is important that the ``Security`` > ``Settings`` role "
"service will be set to **default**, in order to allow GeoServer following"
" the standard authorization chain."
msgstr ""

#: ../../advanced/components/index.rst:580 4348ccb3637549bd8758aa42d14c2d36
msgid ""
"On the other side, you will need to be sure that the ``geofence-"
"server.properties`` file under the ``$GEOSERVER_DATA_DIR/geofence`` "
"folder, contains the two following additional properties: ::"
msgstr ""

#: ../../advanced/components/index.rst:589 e4ba5fba463b4280be57ffc89adef395
msgid ""
"It is necessary now check that GeoServer can connect to OAuth2 Providers "
"(specifically to GeoNode OP), and being able to Authenticate users "
"through it."
msgstr ""

#: ../../advanced/components/index.rst:598 f03b72fe858c4980822bf09f15d88082
msgid ""
"OAuth2 ``Client ID`` and ``Client Secret`` have been generated on GeoNode"
" and known"
msgstr ""

#: ../../advanced/components/index.rst:601 3a4ec9e5961f42de8c82e6e5b8eebb14
msgid "Setup of the GeoNode OAuth2 Security Filter"
msgstr ""

#: ../../advanced/components/index.rst:603
#: ../../advanced/components/index.rst:674
#: ../../advanced/components/index.rst:764 73b98afd582a4fa786279076829e902f
#: c1eae6de731a493bb93df0ac3fa656f5 d4a529ac8f0c4259aa190f1c7eefd51f
msgid "Access the ``Security`` > ``Authentication`` section"
msgstr ""

#: ../../advanced/components/index.rst:607 ebf0e296c73647208582df4e83e9827c
msgid ""
"**If not yet configured** the Authentication Filter ``geonode-oauth2 - "
"Authentication using a GeoNode OAuth2``, click on ``Authentication "
"Filters`` > ``Add new``"
msgstr ""

#: ../../advanced/components/index.rst:609 59b0220f0a6444919fe04ab3e41fcf6d
msgid ""
"This passage is **not** needed if the ``geonode-oauth2 - Authentication "
"using a GeoNode OAuth2`` has been already created. If so it will be "
"displayed among the Authentication Filters list"
msgstr ""

#: ../../advanced/components/index.rst:615 9725df8c69e945fbaefa1a6561bbbb6c
msgid ""
"**If not yet configured** the Authentication Filter ``geonode-oauth2 - "
"Authentication using a GeoNode OAuth2``, choose ``GeoNode OAuth2 - "
"Authenticates by looking up for a valid GeoNode OAuth2 access_token key "
"sent as URL parameter``"
msgstr ""

#: ../../advanced/components/index.rst:619 1d52d27bd1f44a569e3437b6e2338cc2
msgid ""
"Create / update the ``geonode-oauth2 - Authentication using a GeoNode "
"OAuth2`` accordingly"
msgstr ""

#: ../../advanced/components/index.rst:623 c7dcf14bc5f24bea902c29f1957d0e0b
msgid "``Name``; **Must** be ``geonode-oauth2``"
msgstr ""

#: ../../advanced/components/index.rst:625 6573dfdba8ef408082f334d0b684f83e
msgid ""
"``Enable Redirect Authentication EntryPoint``; It is recommended to put "
"this to ``False``, otherwise GeoServer won't allow you to connect to its "
"Admin GUI through the ``Form`` but only through GeoNode"
msgstr ""

#: ../../advanced/components/index.rst:627 b6d9cde3ce5d41ab84029c356499f37c
msgid ""
"``Login Authentication EndPoint``; Unless you have specific needs, keep "
"the default value ``/j_spring_oauth2_geonode_login``"
msgstr ""

#: ../../advanced/components/index.rst:629 1e245c0810d04998a777e5a596497dcb
msgid ""
"``Logout Authentication EndPoint``; Unless you have specific needs, keep "
"the default value ``/j_spring_oauth2_geonode_logout``"
msgstr ""

#: ../../advanced/components/index.rst:631 4a07276ea97d480caac67d05ffc35085
msgid ""
"``Force Access Token URI HTTPS Secured Protocol``; This must be ``False``"
" unless you enabled a ``Secured Connection`` on GeoNode. In that case you"
" will need to trust the GeoNode ``Certificate`` on the GeoServer JVM "
"Keystore. Please see details below"
msgstr ""

#: ../../advanced/components/index.rst:633 57a12c877ed14c2eb7bd9e86de101825
msgid ""
"``Access Token URI``; Set this to "
"``http://<geonode_host_base_url>/o/token/``"
msgstr ""

#: ../../advanced/components/index.rst:635 856e3520e5454679afebdd6d12198e53
msgid ""
"``Force User Authorization URI HTTPS Secured Protocol``; This must be "
"``False`` unless you enabled a ``Secured Connection`` on GeoNode. In that"
" case you will need to trust the GeoNode ``Certificate`` on the GeoServer"
" JVM Keystore. Please see details below"
msgstr ""

#: ../../advanced/components/index.rst:637 893f642259eb4fa2a33d9558d5d8a5cf
msgid ""
"``User Authorization URI``; Set this to "
"``http://<geonode_host_base_url>/o/authorize/``"
msgstr ""

#: ../../advanced/components/index.rst:639 6f608d82cc564cd7bc451ace4891bfe3
msgid ""
"``Redirect URI``; Set this to ``http://<geoserver_host>/geoserver``. This"
" address **must** be present on the ``Redirect uris`` of GeoNode "
"``OAuth2`` > ``Applications`` > ``GeoServer`` (see above)"
msgstr ""

#: ../../advanced/components/index.rst:641 6afa83f12014465fa523b6f8e355dbec
msgid ""
"``Check Token Endpoint URL``; Set this to "
"``http://<geonode_host_base_url>/api/o/v4/tokeninfo/``"
msgstr ""

#: ../../advanced/components/index.rst:643 b7e98040986e46f59cb01bc1268fec07
msgid ""
"``Logout URI``; Set this to "
"``http://<geonode_host_base_url>/account/logout/``"
msgstr ""

#: ../../advanced/components/index.rst:645 5f791546a7af4ab8b7072c66be5f1804
msgid ""
"``Scopes``; Unless you have specific needs, keep the default value "
"``read,write,groups``"
msgstr ""

#: ../../advanced/components/index.rst:647 e8b59935094e4f0c887b844cc91307d1
msgid ""
"``Client ID``; The ``Client id`` alphanumeric key generated by the "
"GeoNode ``OAuth2`` > ``Applications`` > ``GeoServer`` (see above)"
msgstr ""

#: ../../advanced/components/index.rst:649 89592e8f8b074500a1b797a336cf28d5
msgid ""
"``Client Secret``; The ``Client secret`` alphanumeric key generated by "
"the GeoNode ``OAuth2`` > ``Applications`` > ``GeoServer`` (see above)"
msgstr ""

#: ../../advanced/components/index.rst:651 b929a9f95d574312b6739423994642e7
msgid ""
"``Role source``; In order to authorize the user against GeoNode, choose "
"``Role service`` > ``geonode REST role service``"
msgstr ""

#: ../../advanced/components/index.rst:656 bb82bcff21bb497ba43b3d87abf3e18a
msgid ""
"The following steps ensure GeoServer can adopt more Authentication "
"methods. As stated above, it is possible to Authenticate to GeoServer "
"using different protocols."
msgstr ""

#: ../../advanced/components/index.rst:658 fbfcdadda4774285a2639b333687b682
msgid ""
"GeoServer scans the authentication filters chain associated to the "
"specified path and tries them one by one sequentially. The first one "
"matching the protocol and able to grant access to the user, breaks the "
"cycle by creating a ``User Principal`` and injecting it into the "
"GeoServer ``SecurityContext``. The Authentication process, then, ends "
"here and the control goes to the Authorization one, which will try to "
"retrieve the authenticated user's Roles through the available GeoServer "
"Role Services associated to the Authentication Filter that granted the "
"access."
msgstr ""

#: ../../advanced/components/index.rst:669 8e86515ca55e4ae3896759f81886d4bf
msgid ""
"The ``geonode-oauth2 - Authentication using a GeoNode OAuth2`` "
"Authentication Filter and the  ``geonode REST role service`` have been "
"correctly configured"
msgstr ""

#: ../../advanced/components/index.rst:672
#: ../../advanced/components/index.rst:762 22fd5e3d8a2f484c976bdd5d38ffaa94
#: bd85d67345794c178d7c54cc662add22
msgid "Setup of the GeoServer Filter Chains"
msgstr ""

#: ../../advanced/components/index.rst:678 3e5dae9e8dab466482e3af66669cb802
msgid "Identify the section ``Filter Chains``"
msgstr ""

#: ../../advanced/components/index.rst:682 2cabe3fbc04640cf8102af5f5e7203f1
msgid "Make sure the ``web`` Filter Chain is configured as shown below"
msgstr ""

#: ../../advanced/components/index.rst:686
#: ../../advanced/components/index.rst:694
#: ../../advanced/components/index.rst:702
#: ../../advanced/components/index.rst:710
#: ../../advanced/components/index.rst:718
#: ../../advanced/components/index.rst:726 077df792cbfd4b6e9c26d9522b195db0
#: 07b2a504ea2447b696dc944102689165 1b4164a24e364d8ea65f67ae822d4d2f
#: 92ec5764d27347f895fe31e91e6be707 9f30163e8bbd4ba690db202c1d35c3cf
#: cf3944a072f04427ad98080a565010db
msgid ""
"Every time you modify a Filter Chain, **don't forget to save** the "
"``Authentication`` settings. This **must** be done for **each** change."
msgstr ""

#: ../../advanced/components/index.rst:690 4bf06146155b480b898052c9158342f1
msgid "Make sure the ``rest`` Filter Chain is configured as shown below"
msgstr ""

#: ../../advanced/components/index.rst:698 0f9b4c4b4e4a4406b6f1ce74e16815e4
msgid "Make sure the ``gwc`` Filter Chain is configured as shown below"
msgstr ""

#: ../../advanced/components/index.rst:706 33d658181e5a402bb107dd4f1cbbf979
msgid "Make sure the ``default`` Filter Chain is configured as shown below"
msgstr ""

#: ../../advanced/components/index.rst:714 83d50f7747534e7ba1fedc7d5d55f799
msgid ""
"Add the ``GeoNode Login Endpoints`` to the comma-delimited list of the "
"``webLogin`` Filter Chain"
msgstr ""

#: ../../advanced/components/index.rst:722 ad42c1761a124712ae8fc7905abcdfd2
msgid ""
"Add the ``GeoNode Logout Endpoints`` to the comma-delimited list of the "
"``webLogout`` Filter Chain"
msgstr ""

#: ../../advanced/components/index.rst:731 2ccb61400d2b4aea8ae498f5a5b0c749
msgid ""
"Add the ``GeoNode Logout Endpoints`` to the comma-delimited list of the "
"``formLogoutChain`` XML node in "
"``<GEOSERVER_DATA_DIR>/security/filter/formLogout/config.xml``"
msgstr ""

#: ../../advanced/components/index.rst:733 24be8abb36e749f89a8ec98a303485a8
msgid "You will need a text editor to modify the file."
msgstr ""

#: ../../advanced/components/index.rst:735 e1c00046d3b049f4b09fc925a0974b6a
msgid ""
"If the ``<formLogoutChain>`` XML node does not exist at all, create a "
"**new one** as specified below"
msgstr ""

#: ../../advanced/components/index.rst:745 e76acf19140d4ee781b4a95752d03b6d
msgid ""
"The value ``j_spring_oauth2_geonode_logout`` **must** be the same "
"specified as ``Logout Authentication EndPoint`` in the ``geonode-oauth2 -"
" Authentication using a GeoNode OAuth2`` above."
msgstr ""

#: ../../advanced/components/index.rst:750 1942e53f55f54577bbc155d534c5d918
msgid ""
"In order to work correctly, GeoServer needs the `GeoFence Embedded Server"
" <http://docs.geoserver.org/latest/en/user/community/geofence-"
"server/index.html>`_ plugin to be installed and configured on the system."
msgstr ""

#: ../../advanced/components/index.rst:752 4c373bf3cf4c4d0da7ba364b7c858051
msgid ""
"The GeoServer configuration provided for GeoNode, has the plugin already "
"installed with a default configuration. In that case double check that "
"the plugin works correctly and the default rules have been setup by "
"following the next steps."
msgstr ""

#: ../../advanced/components/index.rst:759 d72413ace7254f7a965ffcdc0fb76c19
msgid ""
"The `GeoFence Embedded Server "
"<http://docs.geoserver.org/latest/en/user/community/geofence-"
"server/index.html>`_ plugin has been installed on GeoServer"
msgstr ""

#: ../../advanced/components/index.rst:768 9192012a15cf49fabe6ab2a5ba4e286b
msgid ""
"Identify the section ``Authentication Providers`` and make sure the "
"``geofence`` Authentication Provider is present"
msgstr ""

#: ../../advanced/components/index.rst:772 86d2623c16044d57bbea83e8e8db40f7
msgid "Make sure the ``Provider Chain`` is configured as shown below"
msgstr ""

#: ../../advanced/components/index.rst:776 239fc32dcab84efd98570d168ac55d08
msgid ""
"Every time you modify an Authentication Providers, **don't forget to "
"save** the ``Authentication`` settings. This **must** be done for "
"**each** change."
msgstr ""

#: ../../advanced/components/index.rst:781 e0b26909eba24cf1951cc5711f977d1f
msgid "Setup of the GeoFence Server and Rules"
msgstr ""

#: ../../advanced/components/index.rst:783 bc58b952f86445d6aefbaf6412dc0181
msgid ""
"Make sure GeoFence server works and the default settings are correctly "
"configured"
msgstr ""

#: ../../advanced/components/index.rst:785 5f1e4d564f62436d83564040faaccdd1
msgid "Access the ``Security`` > ``GeoFence`` section"
msgstr ""

#: ../../advanced/components/index.rst:789 5c7e7817951247379ce2d63c404f5805
msgid ""
"Make sure the ``Options`` are configured as follows and the server works "
"well when performing a ``Test Connection``"
msgstr ""

#: ../../advanced/components/index.rst:793 51dc3fcdb0a24dba99fcf71cd905f36a
msgid "``Allow remote and inline layers in SLD``; Set it to ``True``"
msgstr ""

#: ../../advanced/components/index.rst:795 144205c981ab41948b2721d31d5cc5af
msgid "``Allow SLD and SLD_BODY parameters in requests``; Set it to ``True``"
msgstr ""

#: ../../advanced/components/index.rst:797 3fd9b4dcb348472f9449f144cbe4b9c8
msgid "``Authenticated users can write``; Set it to ``True``"
msgstr ""

#: ../../advanced/components/index.rst:799 75d77b2cb8734a268124583f0f4b66c6
msgid "``Use GeoServer roles to get authorizations``; Set it to ``False``"
msgstr ""

#: ../../advanced/components/index.rst:801 faa3ab06882b41548fbdf30aa140896a
msgid "Check the GeoFence default Rules"
msgstr ""

#: ../../advanced/components/index.rst:803 5473cf8647164c63a4eeee27804753ce
msgid "Access the ``Security`` > ``GeoFence Data Rules`` section"
msgstr ""

#: ../../advanced/components/index.rst:807 2be01a7a630445ff91b164138a875973
msgid ""
"Make sure the ``DENY ALL`` Rule is present by default, otherwise your "
"data will be accessible to everyone"
msgstr ""

#: ../../advanced/components/index.rst:809 f8644642c82549088becb2daf0b0b13a
msgid "This rule is **always** the last one"
msgstr ""

#: ../../advanced/components/index.rst:813 77802a8709874fd2a4c21a635bfe9c1f
msgid ""
"If that rule does not exists **at the very bottom** (this rule is "
"**always** the last one), add it manually."
msgstr ""

#: ../../advanced/components/index.rst:815 73d0a7a7fdb44135a7878a1ce400a17a
msgid "Access the ``Security`` > ``GeoFence Admin Rules`` section"
msgstr ""

#: ../../advanced/components/index.rst:819 11973ab08567453a8790974143a1fe51
msgid "No Rules needed here"
msgstr ""

#: ../../advanced/components/index.rst:824 04d51321fed444f4b4342ae976215581
msgid "Troubleshooting and Advanced Features"
msgstr ""

#: ../../advanced/components/index.rst:829 8765cd2bec214837afecad349e0c5cf5
msgid ""
"GeoServer/GeoNode OAuth2 does not authenticate as Administrator even "
"using GeoNode ``admin`` users"
msgstr ""

#: ../../advanced/components/index.rst:831 60a346543611481d92448b0575986d37
msgid "**Symptoms**"
msgstr ""

#: ../../advanced/components/index.rst:833 6c07ae8b738a40fcb37b207c1e786286
msgid ""
"When trying to authenticate with an ``admin`` user using OAuth2, the "
"process correctly redirects to GeoServer page but I'm not a GeoServer "
"Administrator."
msgstr ""

#: ../../advanced/components/index.rst:835 7f84c1f812d2490784551e2262736180
msgid "**Cause**"
msgstr ""

#: ../../advanced/components/index.rst:837 da2a8eec24e84290838455d84fd382f6
msgid ""
"That means that somehow GeoServer could not successfully complete the "
"Authorization and Authentication process."
msgstr ""

#: ../../advanced/components/index.rst:839 3554c99a7ba947ef85f74da69dcf16f4
msgid "The possible causes of the problem may be the following ones:"
msgstr ""

#: ../../advanced/components/index.rst:841 8e52991de0104c80a99e488e6e9a79ea
msgid "The OAuth2 Authentication fails on GeoServer side"
msgstr ""

#: ../../advanced/components/index.rst:843 b17d3f7ee2cb46db98bfb9c5ce1af884
msgid ""
"This is usually due to an exception while trying to complete the "
"Authentication process."
msgstr ""

#: ../../advanced/components/index.rst:845 a34e17cdb60e4b969fa6beff03ae5d14
msgid ""
"A typical cause is that GeoServer tries to use HTTPS connections but the "
"GeoNode certificate is not trusted;"
msgstr ""

#: ../../advanced/components/index.rst:847 be3b74fa9359456dbd379f5ddadf528e
msgid ""
"In that case please refer to the section below. Also take a look at the "
"logs (in particular the GeoServer one) as explained in "
":ref:`debug_geonode`. The GeoServer logs should contain a detailed "
"Exception explaining the cause of the problem. If no exception is listed "
"here (even after raised the log level to *DEBUG*), try to check for the "
"GeoNode Role Service as explained below."
msgstr ""

#: ../../advanced/components/index.rst:851 767455eae76f475185223bc69f5cb7c2
msgid ""
"Another possible issue is that somehow the OAuth2 handshake cannot "
"complete successfully;"
msgstr ""

#: ../../advanced/components/index.rst:853 a3f9a12327474d2fbab661399a74566c
msgid "Login into GeoServer as administrator through its WEB login form."
msgstr ""

#: ../../advanced/components/index.rst:855 c6c57eb25bd64040a21c0f99e266e242
msgid ""
"Double check that all the ``geonode-oauth2 - Authentication using a "
"GeoNode OAuth2`` parameters are correct. If everything is ok, take a look"
" at the logs (in particular the GeoServer one) as explained in "
":ref:`debug_geonode`. The GeoServer logs should contain a detailed "
"Exception explaining the cause of the problem. If no exception is listed "
"here (even after raised the log level to *DEBUG*), try to check for the "
"GeoNode Role Service as explained below."
msgstr ""

#: ../../advanced/components/index.rst:858 26e6aff7c3684aaeb83ba21e8c21dec6
msgid "GeoServer is not able to retrieve the user Role from a Role Service"
msgstr ""

#: ../../advanced/components/index.rst:860 fcf7897fd9dc4765bc76cd00ff9cdee8
msgid ""
"Always double check both HTTP Server and GeoServer log as specified in "
"section :ref:`debug_geonode`. This might directly guide you to the cause "
"of the problem."
msgstr ""

#: ../../advanced/components/index.rst:862 dc86c10107814e60a67066278c103dea
msgid ""
"Check that the GeoServer host is granted to access GeoNode Role Service "
"REST APIs in the ``AUTH_IP_WHITELIST`` of the ``settings.py``"
msgstr ""

#: ../../advanced/components/index.rst:864 a060b8d7f5514333a655818b2964b70a
msgid ""
"Check that the ``geonode REST role service`` is the default Role service "
"and that the GeoServer OAuth2 Plugin has been configured to use it by "
"default"
msgstr ""

#: ../../advanced/components/index.rst:866 c7d1f712b40f4446bbf5e15a00730970
msgid ""
"Check that the GeoNode REST Role Service APIs are functional and produce "
"correct JSON."
msgstr ""

#: ../../advanced/components/index.rst:868 75aafae0e0c840c3a668400c42436ab8
msgid "This is possible by using simple ``cUrl`` GET calls like"
msgstr ""

#: ../../advanced/components/index.rst:889 b2522a2912204d5899966e9b526dc285
msgid ""
"In a production system it is a good practice to encrypt the connection "
"between GeoServer and GeoNode. That would be possible by enabling HTTPS "
"Protocol on the GeoNode REST Role Service APIs and OAuth2 Endpoints."
msgstr ""

#: ../../advanced/components/index.rst:891 5f19fcd2e42f4ec48ba4318d657cc1a2
msgid ""
"Most of the times you will rely on a self-signed HTTPS connection using a"
" generated certificate. That makes the connection *untrusted* and you "
"will need to tell to the GeoServer Java Virtual Machine to trust it."
msgstr ""

#: ../../advanced/components/index.rst:893 9d95e0498cfb4aa3b1b2bcf891c78b40
msgid "This can be done by following the steps below."
msgstr ""

#: ../../advanced/components/index.rst:895 7d608d83a64c4df7bf2d500e48cedd47
msgid ""
"For any issue take a look at the logs (in particular the GeoServer one) "
"as explained in :ref:`debug_geonode`. The GeoServer logs should contain a"
" detailed Exception explaining the cause of the problem."
msgstr ""

#: ../../advanced/components/index.rst:898 9e8af6e9fcde4fa6a794a9f18c5cc5bd
msgid "SSL Trusted Certificates"
msgstr ""

#: ../../advanced/components/index.rst:900 bb72eb55261f483493763f3f052d0149
msgid ""
"When using a custom ``Keystore`` or trying to access a non-trusted or "
"self-signed SSL-protected OAuth2 Provider from a non-SSH connection, you "
"will need to add the certificates to the JVM ``Keystore``."
msgstr ""

#: ../../advanced/components/index.rst:902 82dcd9a5d61f44fbb6712f281a1750d2
msgid "In order to do this you can follow the next steps:"
msgstr ""

#: ../../advanced/components/index.rst:904 2e58e4c9b68948a08fd48fcb14fc4ae8
msgid "In this example we are going to"
msgstr ""

#: ../../advanced/components/index.rst:906 cf24f4a501da4cedab1449adcfda49f6
msgid "Retrieve SSL Certificate from GeoNode domain:"
msgstr ""

#: ../../advanced/components/index.rst:908 d7de25cd9be443fa81a3ff9d873eeb47
msgid ""
"\"Access Token URI\" = https://<geonode_host_base_url>/o/token/ therefore"
" we need to trust ``https://<geonode_host_base_url>`` or "
"(``<geonode_host_base_url>:443``)"
msgstr ""

#: ../../advanced/components/index.rst:910 1bcbfb8792394fdea50b844afd2025ec
msgid ""
"You will need to get and trust certificates from every different HTTPS "
"URL used on OAuth2 Endpoints."
msgstr ""

#: ../../advanced/components/index.rst:912 d0855004b8954a8aaf9d1c95e1811c29
msgid "Store SSL Certificates on local hard-disk"
msgstr ""

#: ../../advanced/components/index.rst:914
#: ../../advanced/components/index.rst:942 45dbc1dfd9444ad08a6d0f1bf88cb729
#: 4ab4cc5dd33f42dd87f52c5cc58bb5df
msgid "Add SSL Certificates to the Java Keystore"
msgstr ""

#: ../../advanced/components/index.rst:916
#: ../../advanced/components/index.rst:985 a99b17335e874ec7a5d7a3f0f4bbe432
#: e456163a81914fe8a62a0fb191b06537
msgid "Enable the JVM to check for SSL Certificates from the Keystore"
msgstr ""

#: ../../advanced/components/index.rst:918 387ce55dfec24686beeb7d30112bbaa0
msgid "Retrieve the SSL Certificate from GeoNode domain"
msgstr ""

#: ../../advanced/components/index.rst:920 a31f49dfcddc46ceb320910b93c260c2
msgid "Use the ``openssl`` command in order to dump the certificate"
msgstr ""

#: ../../advanced/components/index.rst:922 dc7538c2ae2648b3b69fd2fb855b4b68
msgid "For ``https://<geonode_host_base_url>``"
msgstr ""

#: ../../advanced/components/index.rst:931 f3936b20e1094db5942ce8f937f53ae5
msgid "Store SSL Certificate on local hard-disk"
msgstr ""

#: ../../advanced/components/index.rst:933 ee76a60d60b34e5cb8acce4d9bd11bc5
msgid ""
"Copy-and-paste the section ``-BEGIN CERTIFICATE-``, ``-END CERTIFICATE-``"
" and save it into a ``.cert`` file"
msgstr ""

#: ../../advanced/components/index.rst:935 db3311ccd0674e24a5e32e7804aacb1d
msgid ""
"``.cert`` file are plain text files containing the ASCII characters "
"included on the ``-BEGIN CERTIFICATE-``, ``-END CERTIFICATE-`` sections"
msgstr ""

#: ../../advanced/components/index.rst:937
#: ../../advanced/components/index.rst:946 0278f0577cdb4ad1862669ff1bac78f8
#: 5125a0e402754db98c088ae079c5c1d5
msgid "``geonode.cert`` (or whatever name you want with ``.cert`` extension)"
msgstr ""

#: ../../advanced/components/index.rst:944 c9e5d7ec2ba74c77b0ea13cbbb427d0f
msgid "You can use the Java command ``keytool`` like this"
msgstr ""

#: ../../advanced/components/index.rst:952 1b7fa60b0e3f4705a244d5d9605e1b9f
msgid ""
"or, alternatively, you can use some graphic tool which helps you managing"
" the SSL Certificates and Keystores, like `Portecle "
"<http://portecle.sourceforge.net/>`_"
msgstr ""

#: ../../advanced/components/index.rst:987 56298bb3470c4ba1b69d3c2eb95fc2c0
msgid "In order to do this, you need to pass a ``JAVA_OPTION`` to your JVM:"
msgstr ""

#: ../../advanced/components/index.rst:993 f2f0c18682cc4419a00ac9b289a58381
msgid "Restart your server"
msgstr ""

#: ../../advanced/components/index.rst:995 6c8705a7dbad464081d06c65b854fe65
msgid ""
"Here below you can find a bash script which simplifies the Keystore SSL "
"Certificates importing. Use it at your convenience."
msgstr ""

#: ../../advanced/components/index.rst:1020 edee2a4adfb84c23aee7c1ec1ee0d120
msgid "GeoFence Rules Management and Tutorials"
msgstr ""

#: ../../advanced/components/index.rst:1022 4d46f18961754483889d7cee28b24730
msgid ""
"`This tutorial <http://docs.geoserver.org/latest/en/user/community"
"/geofence-server/tutorial.html>`_ shows how to install and configure the "
"Geofence Internal Server plug-in. It shows how to create rules in two "
"ways: using the GUI and REST methods."
msgstr ""

#: ../../advanced/components/index.rst:1024 f9f3327bad26434693b8e61354a8dd7c
msgid ""
"GeoFence Rules can be created / updated / deleted through a REST API, "
"accessible only by a GeoServer Admin user. You can find more details on "
"how the GeoFence REST API works `here "
"<https://github.com/geoserver/geofence/wiki/REST-API>`_."
msgstr ""

#: ../../advanced/components/index.rst:1027 2473648d6387407ba31bd7be5a5ca5fd
msgid "GeoFence Rules Storage Configuration"
msgstr ""

#: ../../advanced/components/index.rst:1029 b534095c673c44048f190f3de44d0701
msgid ""
"By default GeoFence is configured to use a filesystem based DB stored on "
"the GeoServer Data Dir ``<GEOSERVER_DATA_DIR/geofence``."
msgstr ""

#: ../../advanced/components/index.rst:1031 a571da5c404c45ba88c1aae792a2c58d
msgid ""
"It is possible also to configure GeoFence in order to use an external "
"PostgreSQL / PostGIS Database. For more details please refer to the "
"official GeoFence documentation `here "
"<https://github.com/geoserver/geofence/wiki/GeoFence-configuration>`_."
msgstr ""

#: ../../advanced/components/index.rst:1033 cda5ea55f706487cb058587d092a4b61
msgid "Add ``Java Libraries`` to ``GeoServer``"
msgstr ""

#: ../../advanced/components/index.rst:1045 f896d009f28c40feabbfc4ce24638084
msgid ""
"Either create a DB with the updated schema here "
"https://github.com/geoserver/geofence/blob/master/doc/setup/sql/002_create_schema_postgres.sql"
" or enable the hbm2ddl auto creation through the configuration file (see "
"step ``3``)"
msgstr ""

#: ../../advanced/components/index.rst:1047 c5a5da5e133d420ea26582f93e5221fc
msgid ""
"Notice that \"update\" also creates the tables if they do not exist. In "
"production, however, I would suggest to change it to \"validate\""
msgstr ""

#: ../../advanced/components/index.rst:1058 377d7185875f4cccbfe60ac40b1c8fc0
msgid ""
"Add configuration similar to ``geofence-datasource-ovr.properties`` "
"sample below (if loaded as GeoServer extension)"
msgstr ""

#: ../../advanced/components/index.rst:1060 e59996b321ca4279923fb01ac61b10b1
msgid "**<GEOSERVER_DATA_DIR>/geofence/geofence-datasource-ovr.properties**"
msgstr ""

